// <auto-generated />
using System;
using GemFinder.Services.Stores.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GemFinder.Services.Stores.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210202113101_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GemFinder.Services.Stores.Core.Entities.Opinion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Opinion");
                });

            modelBuilder.Entity("GemFinder.Services.Stores.Core.Entities.Reference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Reference");
                });

            modelBuilder.Entity("GemFinder.Services.Stores.Core.Entities.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("GemFinder.Services.Stores.Core.Entities.StoreImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreImage");
                });

            modelBuilder.Entity("GemFinder.Services.Stores.Core.Entities.StoreStone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StoneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreStone");
                });

            modelBuilder.Entity("GemFinder.Services.Stores.Core.Entities.Opinion", b =>
                {
                    b.HasOne("GemFinder.Services.Stores.Core.Entities.Store", null)
                        .WithMany("Opinions")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("GemFinder.Services.Stores.Core.Entities.Reference", b =>
                {
                    b.HasOne("GemFinder.Services.Stores.Core.Entities.Store", null)
                        .WithMany("References")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("GemFinder.Services.Stores.Core.Entities.StoreImage", b =>
                {
                    b.HasOne("GemFinder.Services.Stores.Core.Entities.Store", null)
                        .WithMany("StoreImages")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("GemFinder.Services.Stores.Core.Entities.StoreStone", b =>
                {
                    b.HasOne("GemFinder.Services.Stores.Core.Entities.Store", null)
                        .WithMany("StoreStones")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("GemFinder.Services.Stores.Core.Entities.Store", b =>
                {
                    b.Navigation("Opinions");

                    b.Navigation("References");

                    b.Navigation("StoreImages");

                    b.Navigation("StoreStones");
                });
#pragma warning restore 612, 618
        }
    }
}
